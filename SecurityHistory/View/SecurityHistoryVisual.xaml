<UserControl x:Class="SecurityHistory.Client.View.SecurityHistoryVisual"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
           xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             Background="White"
             xmlns:local="clr-namespace:SecurityHistory.Client"
         xmlns:dxut="clr-namespace:DevExpress.Xpf.Utils.Themes;assembly=DevExpress.Xpf.Core.v18.1"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             mc:Ignorable="d" Height="auto" Width="auto" 
             Loaded="UserControl_Loaded" 
          >
    <UserControl.Resources>

        <!--<ControlTemplate x:Key="{dxgt:TableViewThemeKey IsThemeIndependent=true, ResourceKey=DataPresenterTemplate}" TargetType="{x:Type dxg:DataPresenter}">
            <Border Background="White">
                <ContentPresenter />
            </Border>

        </ControlTemplate>-->


        <!--<SolidColorBrush x:Key="UnfocusedRowBrush" Color="#FF666666" />-->

        <!--<Style TargetType="dxg:GridColumnHeader">
            <Setter Property="Background" Value="LightSkyBlue"/>
        </Style>
        <Style TargetType="dxg:BackgroundBorderControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:BandHeaderControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:HeaderItemsControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:GridSearchControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:GroupFooterRowControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:HeaderContentControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupItemsControlStyle}" TargetType="{x:Type dx:CachedItemsControl}">
            <Setter Property="ClipToBounds" Value="true" />
            <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="GroupPanel" />
            <Setter Property="Background" Value="White"/>
        </Style>-->


        <sys:Double x:Key="maxHeaderHeight">
            50
        </sys:Double>

        <DataTemplate x:Key="wrapHeader">
            <TextBlock Text="{Binding}" MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center" />
        </DataTemplate>


        <Style x:Key="SelectedRowStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="dxg:RowControl.Background" Value="Gray" />
                    <Setter Property="TextElement.Foreground" Value="White" />
                </DataTrigger>
                <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                    <Setter Property="dxg:RowControl.Background" Value="CadetBlue" />
                    <Setter Property="TextElement.Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


    </UserControl.Resources>


    <Grid Column="0" Background="LightGray">
        <Grid.Resources>

            <DataTemplate x:Key="renameColumnHeaderTemplate">
                <Grid>
                    <dxe:TextEdit
                        EditValue="{Binding Path=DataContext.Header, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderContentControl}}" 
                        Foreground="Black" 
                        Visibility="{Binding Path=DataContext.(local:ColumnBehavior.IsRenameEditorActivated),
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderContentControl}, 
                         Converter={local:VisibilityConverter},
                        Mode=TwoWay}"                    
                        Name="textEdit"
                        LostFocus="OnRenameEditorLostFocus"/>

                    <TextBlock 
                        VerticalAlignment="Center"
                        Text="{Binding}" 
                        Visibility="{Binding Path=Visibility, ElementName=textEdit, Converter={local:ReverseVisibilityConverter}}"
                        MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="0" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>

                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="wrapHeader">
                <TextBlock Text="{Binding}" MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center" />
            </DataTemplate>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="105"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="500"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Margin="5,0,0,0" Orientation="Vertical">
                <TextBlock Text="Account:" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="65" Height="20" FontWeight="Bold" Margin="0,5,0,0"/>
                <TextBlock Text="To:" Height="20" HorizontalAlignment="Left"  Name="label5" VerticalAlignment="Top"  FontWeight="Bold" Margin="0,5,0,0"/>
                <TextBlock Text="From:" Height="20" HorizontalAlignment="Left"  Name="label1" VerticalAlignment="Top" FontWeight="Bold" Margin="0,5,0,0"/>
                <TextBlock Text="Broker:" Width ="178" VerticalAlignment="Top" FontWeight="Bold" Margin="0,5,0,0"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="5,0,0,0" Orientation="Vertical">
            <dxe:ComboBoxEdit EditValue="{Binding Parameters.AccountName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
            Margin="0,5,0,0"             
			 x:Name="comboBoxEdit1" 
            Height="20"
			AllowDrop="True"
			VerticalAlignment="Top" Width="178"  
			EditValueChanged="comboBoxEdit1_EditValueChanged"  
			IncrementalFiltering="True" 
			ImmediatePopup="True" 
			AutoComplete="False" 
			FilterCondition="Contains" 
			ValidateOnTextInput="False"
			IsSynchronizedWithCurrentItem="True"
                              
			IsTextEditable="True"  IsPopupOpen="True" SelectedIndexChanged="comboBoxEdit1_SelectedIndexChanged" 
                            
                          
                              >
                    <dxmvvm:Interaction.Triggers>
                        <dxmvvm:EventToCommand EventName="SelectedIndexChanged" Command="{Binding SelectedIndexChangedCommand}" PassEventArgsToCommand="True" />
                    </dxmvvm:Interaction.Triggers>
                    <dxe:ComboBoxEditItem Content="WM01"/>
                </dxe:ComboBoxEdit>
                <dxe:DateEdit EditValue="{Binding Parameters.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Height="20" HorizontalAlignment="Left"  Name="txtstartdate" Text="01/01/2014" VerticalAlignment="Top" Width="178" Grid.Row="0" Margin="0,5,0,0"/>
                <dxe:DateEdit EditValue="{Binding Parameters.EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
         Height="19" HorizontalAlignment="Left"  Name="txtenddate"  VerticalAlignment="Top" Width="178" Grid.Row="0" Margin="0,5,0,0"/>
                
                <dxe:ComboBoxEdit EditValue="{Binding Parameters.Broker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          HorizontalAlignment="Left" 
                            x:Name="BrokerComboBoxEdit" 
                                  Margin="0,5,0,0"
                          AllowDrop="True"
                          VerticalAlignment="Top" Width="178"  
                          IncrementalFiltering="True" 
                          ImmediatePopup="True" 
                          AutoComplete="False" 
                          FilterCondition="Contains" 
                          ValidateOnTextInput="False"
                          IsSynchronizedWithCurrentItem="True"
                          IsTextEditable="True" LostFocus="BrokerComboBoxEdit_LostFocus_1" IsPopupOpen="True" EditValueChanged="BrokerComboBoxEdit_EditValueChanged_1" 
        >
                    <dxmvvm:Interaction.Triggers>
                        <dxmvvm:EventToCommand EventName="SelectedIndexChanged" Command="{Binding SelectedIndexChangedCommand}" PassEventArgsToCommand="True" />
                    </dxmvvm:Interaction.Triggers>
                    <dxe:ComboBoxEditItem Content="IBM.US"/>
                </dxe:ComboBoxEdit>

            </StackPanel>

            <StackPanel Grid.Column="2" Margin="5,0,0,0" Orientation="Vertical">
                <TextBlock Text="Asset type:" HorizontalAlignment="Left" Height="20"  VerticalAlignment="Top" Width="80" FontWeight="Bold" Margin="0,5,0,0"/>
                <dx:SimpleButton Content="Security" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Click="Button_Security" Margin="0,5,0,0" Height="20" />
                <dx:SimpleButton x:Name="btnIssuer" Content="Issuer" HorizontalAlignment="Left" Height="20"  VerticalAlignment="Top" Width="75" Click="btnIssuer_Click" Margin="0,5,0,0"/>
            </StackPanel>

            <StackPanel Grid.Column="3" Margin="5,0,0,0" Orientation="Vertical">
                <dxe:ComboBoxEdit Height="20" HorizontalAlignment="Left"  x:Name="cboAssetType" VerticalAlignment="Top" Width="178"  EditValueChanged="cboAssetType_SelectionChanged_1" Margin="0,5,0,0"/>
                <dxe:ComboBoxEdit EditValue="{Binding Parameters.SecurityName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
            Margin="0,5,0,0"
                              
			  x:Name="SecurityTextBox" 
			AllowDrop="True"
			VerticalAlignment="Top" Width="178"  
			
			IncrementalFiltering="True" 
			ImmediatePopup="True" 
			AutoComplete="False" 
			FilterCondition="Contains" 
			ValidateOnTextInput="False"
			IsSynchronizedWithCurrentItem="True"
			IsTextEditable="True"  IsPopupOpen="True" EditValueChanged="SecurityComboBoxEdit_EditValueChanged_1" LostFocus="SecurityComboBoxEdit_LostFocus_1"
                            >
                    <dxmvvm:Interaction.Triggers>
                        <dxmvvm:EventToCommand EventName="SelectedIndexChanged" Command="{Binding SelectedIndexChangedCommand}" PassEventArgsToCommand="True" />
                    </dxmvvm:Interaction.Triggers>
                    <dxe:ComboBoxEditItem Content="IBM.US"/>
                </dxe:ComboBoxEdit>
                <dxe:ComboBoxEdit EditValue="{Binding Parameters.IssuerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
              Margin="0,5,0,0"
                             Height="20"     
			  x:Name="txtissuer" 
			AllowDrop="True"
			VerticalAlignment="Top" Width="178"  
			
			IncrementalFiltering="True" 
			ImmediatePopup="True" 
			AutoComplete="False" 
			FilterCondition="Contains" 
			ValidateOnTextInput="False"
			IsSynchronizedWithCurrentItem="True"
			IsTextEditable="True"  IsPopupOpen="True" EditValueChanged="IssuerComboBoxEdit_EditValueChanged" LostFocus="IssuerComboBoxEdit_LostFocus" >
      
                </dxe:ComboBoxEdit>
                <dx:SimpleButton  Content="Update" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Name="button1" Width="72" Click="button_Update" Grid.Row="0" Foreground="Black" Margin="0,5,5,5" Height="25"/>
            </StackPanel>

            <!--<StackPanel Orientation="Horizontal" Grid.Column="4" Margin="5,0,0,0">
                <TextBlock Text="Application theme:" VerticalAlignment="Center" Margin="10,0" />

                <dxe:ComboBoxEdit VerticalAlignment="Center" Width="200" ItemsSource="{Binding Source={x:Static dx:Theme.Themes}}" x:Name="cbTheme"
                              DisplayMember="Name" ValueMember="Name"  EditValueChanged="cbTheme_EditValueChanged" EditValue="{Binding Parameters.DefaultTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <dx:SimpleButton Content="Set default theme" VerticalAlignment="Center" Margin="10,0" Padding="15,1" Click="Button_Click" />
            </StackPanel>-->
          

        </Grid>

        <Grid Grid.Column="0" Grid.Row="1">
            <dxg:GridControl   AutoGenerateColumns="None" EnableSmartColumnsGeneration="False"   x:Name="dataGrid"   Visibility="Visible"
                          FontWeight="SemiBold"     AllowLiveDataShaping="True"  Margin="5,10,10,15"  Grid.Row="1"
                          HorizontalAlignment="Stretch" 
                          HorizontalContentAlignment="Stretch" 
                          FontSize="12" FontFamily="Calibri" 
                          ItemsSource="{Binding  MyDataTable.DefaultView,Mode=OneWay,UpdateSourceTrigger=Default}"
                          SelectionMode="Row"
                          dx:DXSerializer.StoreLayoutMode="All"
                          dxg:GridSerializationOptions.AddNewColumns="true" 
                          dxg:GridSerializationOptions.RemoveOldColumns="False" 
                           >
                <dxg:GridControl.View  >

                    <dxg:TableView 
                    x:Name="_viewDataGrid"
                    AllowPerPixelScrolling="True" 
                    ShowTotalSummary="True" 
                    PageSize="30"
                    AllowChangeBandParent="True" 
                    AllowChangeColumnParent="True"
                    ShowGroupPanel="False" 
                    AllowConditionalFormattingMenu="True"
                    ColumnHeaderTemplate="{StaticResource renameColumnHeaderTemplate}" ShowGridMenu="OnShowGridMenu"
                    AllowPaging="False" 
                     GroupSummaryDisplayMode="AlignByColumns"
                    >
                        <dxg:TableView.ColumnMenuCustomizations>

                            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.ItemLinkIndex="1" />
                            <dxb:BarButtonItem Content="Display Format" ItemClick="BarButtonItem_ItemClick"/>
                        </dxg:TableView.ColumnMenuCustomizations>
                        <!--endregion #Add-->
                        <!--region #Remove-->
                        <dxg:TableView.TotalSummaryMenuCustomizations>
                            <dxb:RemoveBarItemAndLinkAction ItemName="{x:Static dxg:DefaultSummaryMenuItemNames.Customize}" />
                        </dxg:TableView.TotalSummaryMenuCustomizations>

                    </dxg:TableView>

                </dxg:GridControl.View>
                <dxg:GridColumn  Header="Account" Binding="{Binding account_sh_name}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                 
                </dxg:GridColumn>

                <dxg:GridColumn Header="Symbol" Binding="{Binding symbol}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                  
                </dxg:GridColumn>

                <dxg:GridColumn Header="Security Name" Binding="{Binding security_name_1}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                 
                </dxg:GridColumn>

                <dxg:GridColumn Header="Commission" Binding="{Binding commission}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
           
                </dxg:GridColumn>

                <dxg:GridColumn Header="Exchange" Binding="{Binding exchange_name}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                  
                </dxg:GridColumn>

                <dxg:GridColumn Header="Asset Type" Binding="{Binding major_asset_description}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                
                </dxg:GridColumn>

                <dxg:GridColumn Header="Quantity" Binding="{Binding quantity_ordered}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                   
                </dxg:GridColumn>

                <dxg:GridColumn Header="Qty Placed" Binding="{Binding quantity_placed}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                 
                </dxg:GridColumn>

                <dxg:GridColumn Header="Qty Executed" Binding="{Binding quantity_executed}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                  
                </dxg:GridColumn>

                <dxg:GridColumn Header="Average Price" Binding="{Binding average_price}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                 
                </dxg:GridColumn>

                <dxg:GridColumn Header="Exchange Mnemonic" Binding="{Binding exchange_mnemonic}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                  
                </dxg:GridColumn>

                <dxg:GridColumn Header="Commission Type" Binding="{Binding commission_type_name}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                   
                </dxg:GridColumn>

                <dxg:GridColumn Header="Broker" Binding="{Binding broker_name}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                   
                </dxg:GridColumn>

                <dxg:GridColumn Header="Direction" Binding="{Binding direction_sh_name}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
               
                </dxg:GridColumn>

                <dxg:GridColumn Header="Price" Binding="{Binding total_average_price}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n4" />
                    </dxg:GridColumn.EditSettings>
                 
                </dxg:GridColumn>

                <dxg:GridColumn Header="Net Amount" Binding="{Binding net_amount}"  Width="Auto" IsSmart="True" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="n2" />
                    </dxg:GridColumn.EditSettings>
                
                </dxg:GridColumn>

                <dxg:GridColumn Header="Trade Date" Binding="{Binding trade_date}"  Width="Auto" IsSmart="True" >

                  
                </dxg:GridColumn>

                <dxg:GridColumn Header="Settlement Date" Binding="{Binding settlement_date}"  Width="Auto" IsSmart="True" >

                   
                </dxg:GridColumn>

            </dxg:GridControl>
            <dx:WaitIndicator DeferedVisibility="{Binding IsWaitIndicatorVisible}" Name="TempbusyIndicator" Content="Loading..." Focusable="True"  >
                <dx:WaitIndicator.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Please Wait" FontSize="20"/>
                            <TextBlock Text="{Binding}"/>
                        </StackPanel>
                    </DataTemplate>
                </dx:WaitIndicator.ContentTemplate>
            </dx:WaitIndicator>
        </Grid>

    </Grid>

</UserControl>
