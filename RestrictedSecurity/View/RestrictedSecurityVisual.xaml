<UserControl x:Class="RestrictedSecurity.Client.View.RestrictedSecurityVisual"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
           xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
             Background="White"
             xmlns:local="clr-namespace:RestrictedSecurity.Client"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             mc:Ignorable="d" Height="auto" Width="auto" 
             Loaded="UserControl_Loaded" 
          >
    <UserControl.Resources>

        <ControlTemplate x:Key="{dxgt:TableViewThemeKey IsThemeIndependent=true, ResourceKey=DataPresenterTemplate}" TargetType="{x:Type dxg:DataPresenter}">
            <Border Background="White">
                <ContentPresenter />
            </Border>

        </ControlTemplate>


        <SolidColorBrush x:Key="UnfocusedRowBrush" Color="#FF666666" />

        <Style TargetType="dxg:GridColumnHeader">
            <Setter Property="Background" Value="LightSkyBlue"/>
        </Style>
        <Style TargetType="dxg:BackgroundBorderControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:BandHeaderControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:HeaderItemsControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:GridSearchControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:GroupFooterRowControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style TargetType="dxg:HeaderContentControl">
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupItemsControlStyle}" TargetType="{x:Type dx:CachedItemsControl}">
            <Setter Property="ClipToBounds" Value="true" />
            <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="GroupPanel" />
            <Setter Property="Background" Value="White"/>
        </Style>


        <sys:Double x:Key="maxHeaderHeight">
            50
        </sys:Double>

        <DataTemplate x:Key="wrapHeader">
            <TextBlock Text="{Binding}" MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center" />
        </DataTemplate>


        <Style x:Key="SelectedRowStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="dxg:RowControl.Background" Value="Gray" />
                    <Setter Property="TextElement.Foreground" Value="White" />
                </DataTrigger>
                <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                    <Setter Property="dxg:RowControl.Background" Value="CadetBlue" />
                    <Setter Property="TextElement.Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


    </UserControl.Resources>


    <Grid Column="0" Background="LightGray">
        <Grid.Resources>
         
            
            <DataTemplate x:Key="renameColumnHeaderTemplate">
                <Grid>
                    <dxe:TextEdit
                        EditValue="{Binding Path=DataContext.Header, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderContentControl}}" 
                        Foreground="Black" 
                        Visibility="{Binding Path=DataContext.(local:ColumnBehavior.IsRenameEditorActivated), 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderContentControl}, 
                        Converter={local:VisibilityConverter},
                        Mode=TwoWay}"                    
                        Name="textEdit"
                        LostFocus="OnRenameEditorLostFocus"/>

                    <TextBlock 
                        VerticalAlignment="Center"
                        Text="{Binding}" 
                        Visibility="{Binding Path=Visibility, ElementName=textEdit, Converter={local:ReverseVisibilityConverter}}"
                        MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="0" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>

                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="wrapHeader">
                <TextBlock Text="{Binding}" MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center" />
            </DataTemplate>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
       

        <StackPanel Orientation="Horizontal">
            <dxe:ComboBoxEdit EditValue="{Binding Parameters.AccountName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
                              
			Margin="5,0,0,0"  x:Name="comboBoxEdit1" 
			AllowDrop="True"
			VerticalAlignment="Top" Width="178"  
			EditValueChanged="comboBoxEdit1_EditValueChanged"  
			IncrementalFiltering="True" 
			ImmediatePopup="True" 
			AutoComplete="False" 
			FilterCondition="Contains" 
			ValidateOnTextInput="False"
			IsSynchronizedWithCurrentItem="True"
                              
			IsTextEditable="True" LostFocus="comboBoxEdit1_LostFocus" IsPopupOpen="True" SelectedIndexChanged="comboBoxEdit1_SelectedIndexChanged" 
                            
                          
                              >
                <dxmvvm:Interaction.Triggers>
                    <dxmvvm:EventToCommand EventName="SelectedIndexChanged" Command="{Binding SelectedIndexChangedCommand}" PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Triggers>
                <dxe:ComboBoxEditItem Content="WM01"/>
            </dxe:ComboBoxEdit>
           
            <Button Content="Run Rules" Margin="5,0,0,0" Background="LightGreen" Width="100" Height="25" HorizontalAlignment="Left"  VerticalAlignment="top" Name="BtnRunrules" Click="BtnReRunRules_Click"></Button>
            <Button Background="LightGreen" Width="10" Height="25" HorizontalAlignment="Left"  VerticalAlignment="top" Name="BtnRefresh" Click="BtnRefresh_Click"></Button>
        </StackPanel>

        <dxg:GridControl   AutoGenerateColumns="AddNew" EnableSmartColumnsGeneration="False"   x:Name="_dataOP"   
                          FontWeight="SemiBold"     AllowLiveDataShaping="True"  Margin="5,10,10,15"  Grid.Row="2"
                          HorizontalAlignment="Stretch" 
                          HorizontalContentAlignment="Stretch" 
                          FontSize="12" FontFamily="Calibri" 
                          ItemsSource="{Binding  Restriction.DefaultView,Mode=OneWay,UpdateSourceTrigger=Default}"
                          SelectionMode="Row"
                          dx:DXSerializer.StoreLayoutMode="All"
                          dxg:GridSerializationOptions.AddNewColumns="true" 
                          dxg:GridSerializationOptions.RemoveOldColumns="False" 
                           >
            <dxg:GridControl.View  >

                <dxg:TableView 
                    x:Name="_viewDataGrid"
                    AllowPerPixelScrolling="True" 
                    ShowTotalSummary="True" 
                  
                    AllowChangeBandParent="True" 
                    AllowChangeColumnParent="True"
                    ShowGroupPanel="False" 
                    AllowConditionalFormattingMenu="True"
                    ColumnHeaderTemplate="{StaticResource renameColumnHeaderTemplate}" ShowGridMenu="OnShowGridMenu"
                    AllowPaging="True" 
                    >

                </dxg:TableView>

            </dxg:GridControl.View>

            <dxg:GridControl.Columns>

                <dxg:GridColumn FieldName="CustomColumn1" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn2" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn3" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn4" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn5" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn6" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
            </dxg:GridControl.Columns>
        </dxg:GridControl>

        <Grid Grid.Column="0" Grid.Row="1">
            <dx:WaitIndicator DeferedVisibility="{Binding IsWaitIndicatorVisible}" Name="TempbusyIndicator" Content="Loading..." Focusable="True"  >
                <dx:WaitIndicator.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Please Wait" FontSize="20"/>
                            <TextBlock Text="{Binding}"/>
                        </StackPanel>
                    </DataTemplate>
                </dx:WaitIndicator.ContentTemplate>
            </dx:WaitIndicator>
        </Grid>






    </Grid>

</UserControl>
